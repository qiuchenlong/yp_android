apply plugin: 'com.android.application'

android {
    // 签名密钥配置
    signingConfigs {
        yipin_sign_config {
            // 签名证书 文件地址
            storeFile file('./yipin.jks')
            // store 密码
            storePassword 'Cindy1024'
            // 签名证书 别名
            keyAlias 'yipin' // vipsai_key
            // 签名证书 密码
            keyPassword 'Cindy1024' //vipsai666
            // V2版签名模式
            // 同时满足下面两个条件才需要此配置
            // 1. Gradle版本 >= 2.14.1
            // 2. Android Gradle Plugin 版本 >= 2.2.0
            // 作用是只使用旧版签名，禁用V2版签名模式
            // 兼容7.0版本的Android系统才需要,否则不需要
            v2SigningEnabled true
        }
    }

    compileSdkVersion 28
    defaultConfig {
        applicationId "com.ten.android.yipinapicloud"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'armeabi'
        }
    }

    // 执行lint检查，有任何的错误或者警告提示，都会终止构建，我们可以将其关掉。
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled false
            // 签名
            signingConfig signingConfigs.yipin_sign_config
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // 自定义输出配置
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        // 输出apk名称为wooyun_v1.0_wandoujia.apk
//                        def fileName = "vipsai_v${defaultConfig.versionName}_${variant.productFlavors[0].name}.apk"
//                        output.outputFile = new File(outputFile.parent, fileName)


                        def project = "yipin"
                        def separator = "_"
                        def buildType = variant.variantData.variantConfiguration.buildType.name
                        def versionName = variant.versionName
                        def versionCode = variant.versionCode
                        def date = new Date()
                        def formattedDate = date.format('yyyyMMdd')

                        def apkName = project + separator + "v" + versionName + separator + versionCode + separator + buildType + separator + flavor.name + ".apk"
                        if (buildType == "release") {
                            // variant.productFlavors[0].name 渠道名称
                            apkName = project + separator + "v" + versionName + separator + versionCode + separator + buildType + separator + variant.productFlavors[0].name + separator + formattedDate + ".apk"
                        }

                        output.outputFileName = apkName

                    }
                }
            }
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    allprojects {
        repositories {
            mavenCentral()
        }
    }


    flavorDimensions "yipin"
    productFlavors {
        // 多渠道打包，命令行：./gradlew assembleRelease          11
        // 多渠道打包，命令行：./gradlew assembleOfficalRelease          11
        // 官方包
        offical {
            dimension "yipin"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "offical"]
        }
        oppo {
            dimension "yipin"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "oppo"]
        }
        vivo {
            dimension "yipin"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "vivo"]
        }
        meizu {
            dimension "yipin"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "meizu"]
        }
        jinli {
            dimension "yipin"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "jinli"]
        }
        samsung {
            dimension "yipin"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "samsung"]
        }
        yingyongbao {
            dimension "yipin"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "yingyongbao"]
        }
        q360 {
            dimension "yipin"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "q360"]
        }
        xiaomi {
            dimension "yipin"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "xiaomi"]
        }
        baidu {
            dimension "yipin"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "baidu"]
        }
        wandoujia {
            dimension "yipin"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "wandoujia"]
        }
        huawei {
            dimension "yipin"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "huawei"]
        }
        smartisan {
            dimension "yipin"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "smartisan"]
        }
        lenovo {
            dimension "yipin"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "lenovo"]
        }
        htc {
            dimension "yipin"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "htc"]
        }
        gfan {
            dimension "yipin"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "gfan"]
        }



    }

    dexOptions {
        javaMaxHeapSize "2g"
    }

}

dependencies {

    configurations {
        all*.exclude group: 'com.android.support', module: 'support-v13'
    }

    implementation fileTree(include: ['*.jar'], dir: 'libs')
//    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'com.android.support.test:runner:1.0.2'
//    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation files('libs/ajpush.jar')
    implementation files('libs/alipaySdk-20160809.jar')
    implementation files('libs/android-support-multidex.jar')
    implementation files('libs/android-support-v4.jar')
    implementation files('libs/APICloudGlide.jar')
    implementation files('libs/apiEngine v1.1.0.jar')
    implementation files('libs/jcore-android-1.2.5.jar')
    implementation files('libs/jpush-android-3.1.6.jar')
    implementation files('libs/libammsdk.jar')
    implementation files('libs/photoimageview.jar')
    implementation files('libs/renderscript-v8.jar')
    implementation files('libs/smsVerification.jar')
    implementation files('libs/UIMediaScanner.jar')
    implementation files('libs/uzAlipay.jar')
    implementation files('libs/uzbookReader.jar')
    implementation files('libs/uzFs.jar')
    implementation files('libs/uzImageBrowser.jar')
    implementation files('libs/uzImageFilter.jar')
    implementation files('libs/uzMam.jar')
    implementation files('libs/uzweixin.jar')
    implementation files('libs/uzWx.jar')
    implementation files('libs/wechat-sdk-android-with-mta-5.1.6.jar')
    implementation files('libs/xUtils-2.6.14.jar')


    // 友盟统计
    implementation 'com.umeng.umsdk:analytics:8.0.0'
    implementation 'com.umeng.umsdk:common:2.0.0'


    //4，permissionsdispatcher权限
    implementation'com.github.hotchemi:permissionsdispatcher:3.1.0'
    annotationProcessor 'com.github.hotchemi:permissionsdispatcher-processor:3.1.0'
}
